/*==============================================================================
 
 Program: PETTumorSegmentation
 
 (c) Copyright University of Iowa All Rights Reserved.
 
 See COPYRIGHT.txt
 or http://www.slicer.org/copyright/copyright.txt for details.
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 
 ==============================================================================*/

#ifndef _itkLOGISMOSOSFGraphSolverFilter_h
#define _itkLOGISMOSOSFGraphSolverFilter_h

#include "itkOSFGraphToOSFGraphFilter.h"
#include "logismos_graph.hxx"

namespace itk
{
    
/**\class LOGISMOSOSFGraphSolverFilter
 * \brief
  * \date	12/9/2014
 * \author	Christian Bauer
 * An object that applies the solver to the maximum flow graph generated by the graph builder. CONTINUE
 * Template parameters for class LOGISMOSOSFGraphSolverFilter:
 *
 * - TInputOSFGraph = The type of the graph input object.
 * - TOutputOSFGraph = The type of the graph output object.
 */
template <class TInputOSFGraph, class TOutputOSFGraph>
class ITK_EXPORT LOGISMOSOSFGraphSolverFilter : public OSFGraphToOSFGraphFilter<TInputOSFGraph,TOutputOSFGraph>
{
public:
  typedef LOGISMOSOSFGraphSolverFilter Self;
  typedef OSFGraphToOSFGraphFilter<TInputOSFGraph,TOutputOSFGraph> Superclass;
  typedef SmartPointer< Self > Pointer;
  typedef SmartPointer< const Self > ConstPointer;
  
  itkNewMacro( Self );
  itkTypeMacro( LOGISMOSOSFGraphSolverFilter, OSFGraphToOSFGraphFilter );
  
  typedef TInputOSFGraph InputOSFGraphType;
  typedef typename InputOSFGraphType::ConstPointer InputOSFGraphConstPointer;
  
  typedef TOutputOSFGraph OutputOSFGraphType;
  typedef typename OutputOSFGraphType::Pointer OutputOSFGraphPointer;
  
protected:
  /** Constructor for use by New() method. */
  LOGISMOSOSFGraphSolverFilter();
  ~LOGISMOSOSFGraphSolverFilter() override;
  void PrintSelf(std::ostream& os, Indent indent) const override;
  
  void GenerateData() override;
  
  typedef typename InputOSFGraphType::GraphCosts CapacityType;
  typedef LOGISMOS::graph<CapacityType> MaxFlowGraphType;
  typedef MaxFlowGraphType* MaxFlowGraphPointer;
  MaxFlowGraphPointer m_MaxFlowGraph;
  CapacityType m_FlowValue;
  virtual void BuildMaxFlowGraphGraph();
  virtual void UpdateResult();
  
private:
  LOGISMOSOSFGraphSolverFilter(const Self&); //purposely not implemented
  void operator=(const Self&); //purposely not implemented
  
}; // end class LOGISMOSOSFGraphSolverFilter

} // end namespace itk

#ifndef ITK_MANUAL_INSTANTIATION
#include "itkLOGISMOSOSFGraphSolverFilter.txx"
#endif

#endif

